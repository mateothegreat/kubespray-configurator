# ------------------------------------------------------------------------------
# git-cliff configuration for @mateothegreat/kubespray-configurator
# Docs: https://git-cliff.org/docs/configuration
#
# This file controls how changelogs are generated from your commit history.
# Sections:
# - [changelog]: Visual layout and body template.
# - [git]: Commit parsing, grouping, and linkification rules.
# - [remote.github]: Repository metadata for contributor lists and links.
# ------------------------------------------------------------------------------

[changelog]
# Header: Rendered at the top of CHANGELOG output.
header = """
<div align="center">
  <h1>📋 Changelog</h1>
  <p><strong>@mateothegreat/kubespray-configurator</strong></p>
  <p>A tool to help you maintain your settings for kubespray</p>
  <p>
    <a href="https://github.com/mateothegreat/kubespray-configurator">GitHub</a> •
  </p>
</div>

---

All notable changes to this project will be documented in this file.

The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),
and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).
"""

# Body: Release section template (per version).
# Uses Tera templating with variables from git-cliff context.
body = """
## [{{ version }}](https://github.com/mateothegreat/kubespray-configurator/releases/tag/{{ version }}) - {{ timestamp | date(format="%Y-%m-%d") }}

{% if version %}
### 📊 Release Summary
- **Version**: `{{ version | trim_start_matches(pat="v") }}`
- **Released**: {{ timestamp | date(format="%B %d, %Y") }}
- **Total Changes**: {{ commits | length }} commit{% if commits | length != 1 %}s{% endif %}
{% endif %}

{% for group, commits in commits | group_by(attribute="group") %}
  ### {{ group | striptags | trim | upper_first }}

  {% for commit in commits %}
    - {% if commit.scope %}**{{ commit.scope }}**: {% endif %}\
    {% if commit.breaking %}⚠️ **BREAKING**: {% endif %}{{ commit.message | upper_first | trim }}\
    {% if commit.author %} by [@{{ commit.remote.username }}](https://github.com/{{ commit.remote.username }}){% endif %} \
    ([`{{ commit.id | truncate(length=7, end="") }}`](https://github.com/mateothegreat/kubespray-configurator/commit/{{ commit.id }}))
  {% endfor %}
{% endfor %}

{% if github.contributors | length != 0 %}
  ### 👥 Contributors

  Thanks ❤️‍🔥 to the following people who contributed to this release:

  {% for contributor in github.contributors %}
    {% if contributor.username %} - [@{{ contributor.username }}](https://github.com/{{ contributor.username }}){%- endif %}
  {%- endfor %}
{% endif %}
"""

# Footer: Rendered once at the end.
footer = """
---

<div align="center">
  <sub>
    Generated by <a href="https://git-cliff.org">git-cliff</a> • 
    <a href="https://github.com/mateothegreat/kubespray-configurator/issues">Report Issues</a> • 
    <a href="https://github.com/mateothegreat/kubespray-configurator/discussions">Join Discussions</a>
  </sub>
</div>
"""

# Output cleanup behavior.
trim = true
render_always = true

# Post-processors to replace placeholders and tidy whitespace.
postprocessors = [
    { pattern = '<REPO>', replace = "https://github.com/mateothegreat/kubespray-configurator" },
    # Collapse 3+ blank lines down to 2.
    { pattern = '\n\n\n+', replace = "\n\n" },
]

# To write directly to a changelog file, uncomment:
# output = "CHANGELOG.md"

[git]
# Conventional commit awareness; not enforced to allow flexible messages.
conventional_commits = true
filter_unconventional = false
require_conventional = false

# Do not split commits by files; cap how many are considered.
split_commits = false
limit_commits = 100

# Preprocessors: enrich commit text with links (issues, PRs).
commit_preprocessors = [
    # Link to GitHub issues.
    { pattern = '\((\w+\s)?#([0-9]+)\)', replace = "([#${2}](https://github.com/mateothegreat/kubespray-configurator/issues/${2}))" },
    # Link to PRs.
    { pattern = 'PR #([0-9]+)', replace = "[PR #${1}](https://github.com/mateothegreat/kubespray-configurator/pull/${1})" },
]

# Always keep breaking changes visible.
protect_breaking_commits = true

# Commit grouping rules by category.
commit_parsers = [
    # Core features
    { message = "^feat",     group = "<!-- 00 -->🚀 Features" },
    { message = "^feature",  group = "<!-- 00 -->🚀 Features" },

    # Bug fixes
    { message = "^fix",      group = "<!-- 01 -->🐛 Bug Fixes" },
    { message = "^bugfix",   group = "<!-- 01 -->🐛 Bug Fixes" },

    # Performance improvements
    { message = "^perf",     group = "<!-- 02 -->⚡ Performance" },
    { message = "^optimize", group = "<!-- 02 -->⚡ Performance" },

    # Code refactoring
    { message = "^refactor", group = "<!-- 03 -->♻️ Refactoring" },
    { message = "^refact",   group = "<!-- 03 -->♻️ Refactoring" },

    # Documentation
    { message = "^docs?",    group = "<!-- 04 -->📚 Documentation" },
    { message = "^readme",   group = "<!-- 04 -->📚 Documentation" },

    # Testing
    { message = "^test",     group = "<!-- 05 -->🧪 Testing" },
    { message = "^spec",     group = "<!-- 05 -->🧪 Testing" },
    { message = "^e2e",      group = "<!-- 05 -->🧪 Testing" },

    # Styling
    { message = "^style",    group = "<!-- 06 -->🎨 Styling" },
    { message = "^css",      group = "<!-- 06 -->🎨 Styling" },
    { message = "^ui",       group = "<!-- 06 -->🎨 Styling" },

    # Dependencies
    { message = "^deps",                 group = "<!-- 07 -->📦 Dependencies" },
    { message = "^dep",                  group = "<!-- 07 -->📦 Dependencies" },
    { message = "update.*dependencies",  group = "<!-- 07 -->📦 Dependencies" },

    # Build & CI
    { message = "^build",    group = "<!-- 08 -->🏗️ Build System" },
    { message = "^ci",       group = "<!-- 08 -->🏗️ Build System" },
    { message = "^pipeline", group = "<!-- 08 -->🏗️ Build System" },

    # Security
    { body    = ".*security", group = "<!-- 09 -->🔒 Security" },
    { message = "^security",  group = "<!-- 09 -->🔒 Security" },
    { message = "^vuln",      group = "<!-- 09 -->🔒 Security" },

    # Breaking changes
    { body    = ".*BREAKING CHANGE.*", group = "<!-- 10 -->💥 Breaking Changes" },
    { message = "^breaking",            group = "<!-- 10 -->💥 Breaking Changes" },

    # Reverts
    { message = "^revert",   group = "<!-- 11 -->⏪ Reverts" },

    # Types
    { message = "^types?",   group = "<!-- 12 -->🏷️ Types" },
    { message = "^typing",   group = "<!-- 12 -->🏷️ Types" },

    # Chores (skip noisy dependency chore variants)
    { message = "^chore\\(release\\)",   skip  = true },
    { message = "^chore\\(deps\\)",      skip  = true },
    { message = "^chore\\(deps-dev\\)",  skip  = true },
    { message = "^chore",                group = "<!-- 13 -->🔧 Maintenance" },

    # Examples
    { message = "^example",  group = "<!-- 14 -->📝 Examples" },
    { message = "^demo",     group = "<!-- 14 -->📝 Examples" },

    # Everything else
    { message = ".*",        group = "<!-- 15 -->📋 Other Changes" },
]

# Include all commits (no filtering).
filter_commits = false

# Link parsing for usernames and SHAs.
link_parsers = [
    { pattern = "@([a-zA-Z0-9_-]+)",              href = "https://github.com/${1}" },
    { pattern = "([a-f0-9]{7})[a-f0-9]{33}",      href = "https://github.com/mateothegreat/kubespray-configurator/commit/${0}" },
]

# Ordering and traversal.
use_branch_tags = false
topo_order = false
topo_order_commits = true
sort_commits = "newest"
recurse_submodules = false

[remote.github]
owner = "mateothegreat"
repo  = "kubespray-configurator"